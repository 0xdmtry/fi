services:
  test-app-authorizer:
    container_name: test-app-authorizer
    build:
      context: ../../app/authorizer
      dockerfile: Authorizer.test.dockerfile
    restart: always
    ports:
      - "8100:8000"
    volumes:
      - ../../app/authorizer/src:/app/src
      - ../../app/authorizer/migration:/app/migration
      - ../../app/authorizer/tests:/app/tests
      - ../../app/authorizer/Cargo.toml:/app/Cargo.toml
      - ../../app/authorizer/Cargo.lock:/app/Cargo.lock
      - /app/target
    depends_on:
      test-db-app-authorizer:
        condition: service_started
      test-app-emailer:
        condition: service_started
    networks:
      - test-fi-network

  test-db-app-authorizer:
    container_name: test-db-app-authorizer
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_DB: test_authorizer
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - .dbdata/postgres/test/test_authorizer/:/var/lib/postgresql/data
    ports:
      - "5532:5432"
    networks:
      - test-fi-network

  test-app-emailer:
    container_name: test-app-emailer
    build:
      context: ../../app/emailer
      dockerfile: Emailer.test.dockerfile
    restart: always
    depends_on:
      test-db-app-emailer:
        condition: service_started
    ports:
      - "8101:8001"
    volumes:
      - ../../app/emailer/src:/app/src
      - ../../app/emailer/migration:/app/migration
      - ../../app/emailer/tests:/app/tests
      - ../../app/emailer/Cargo.toml:/app/Cargo.toml
      - ../../app/emailer/Cargo.lock:/app/Cargo.lock
      - /app/target
    networks:
      - test-fi-network

  test-db-app-emailer:
    container_name: test-db-app-emailer
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_DB: test_emailer
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - .dbdata/postgres/test/test_emailer/:/var/lib/postgresql/data
    ports:
      - "5533:5432"
    networks:
      - test-fi-network

  test-dapp-solana-walletor:
    container_name: test-dapp-solana-walletor
    build:
      context: ../../dapp/solana/walletor
      dockerfile: Walletor.test.dockerfile
    restart: always
    depends_on:
      test-db-dapp-solana-walletor:
        condition: service_started
    ports:
      - "8102:8001"
    volumes:
      - ../../dapp/solana/walletor/src:/app/src
      - ../../dapp/solana/walletor/migration:/app/migration
      - ../../dapp/solana/walletor/tests:/app/tests
      - ../../dapp/solana/walletor/Cargo.toml:/app/Cargo.toml
      - ../../dapp/solana/walletor/Cargo.lock:/app/Cargo.lock
      - /app/target
    networks:
      - test-fi-network

  test-db-dapp-solana-walletor:
    container_name: test-db-dapp-solana-walletor
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_DB: test_walletor
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - .dbdata/postgres/test/test_solana_walletor/:/var/lib/postgresql/data
    ports:
      - "5534:5432"
    networks:
      - test-fi-network

  test-mailhog:
    container_name: test-mailhog
    image: "mailhog/mailhog:latest"
    ports:
      - "1125:1025"
      - "8125:8025"
    networks:
      - test-fi-network


networks:
  test-fi-network:
    driver: bridge