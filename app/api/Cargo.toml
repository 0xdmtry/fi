[package]
name = "api"
version = "0.1.0"
edition = "2024"

[dependencies]
# --- Core Runtime ---
tokio = { version = "1", features = ["full"] }                     # Async runtime for Axum, SeaORM, and other async ops
axum = "0.7"                                                       # Web framework for building APIs and routing requests
serde = { version = "1", features = ["derive"] }                  # Serialize/deserialize data structures (e.g., JSON, DB)
serde_json = "1"                                                  # JSON encoding/decoding support via Serde
uuid = { version = "1", features = ["v4", "serde"] }              # Generate UUIDs for user IDs and other unique IDs
chrono = { version = "0.4", features = ["serde"] }                # Handle timestamps, used for created_at/updated_at fields
dotenvy = "0.15"                                                  # Load environment variables from `.env` file

# --- Database ---
sea-orm = { version = "0.12", features = ["postgres", "runtime-tokio-native-tls", "macros"] }  # Async ORM for PostgreSQL
sea-orm-migration = "0.12"                                            # Schema migrations for managing DB tables and changes

# --- Tracing and Logging ---
tracing = "0.1"                                                   # Structured logging (alternative to println! / log crate)
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "json"] } # Log filtering and formatting (env-driven)
console-subscriber = "0.2"                                        # Live flamegraph view of async tasks in `tokio-console`

# --- Validation ---
validator = { version = "0.16", features = ["derive"] }           # Input validation for API payloads (e.g., email, length)

# --- Security ---
argon2 = "0.5"                                                    # Password hashing (secure storage of user passwords)
rand = "0.8"                                                      # Random values for tokens, salts, etc.
jsonwebtoken = "9"                                                # JWT creation/validation for auth (access tokens, etc.)

# --- HTTP Client (for external APIs, like email providers) ---
reqwest = { version = "0.11", features = ["json", "multipart", "gzip", "brotli", "deflate", "rustls-tls"] } # Send HTTP requests to services like SendGrid, Mailgun, etc.

# --- Metrics and Observability ---
metrics = "0.22"                                                  # Record runtime metrics (counters, histograms, etc.)
metrics-exporter-prometheus = "0.13"                              # Expose Prometheus-compatible metrics endpoint
tracing-opentelemetry = "0.22"                                    # Export traces to OpenTelemetry collectors (e.g., Jaeger)
opentelemetry = { version = "0.21", features = ["rt-tokio"] }     # OpenTelemetry core lib with Tokio runtime
opentelemetry-jaeger = "0.19"                                     # Jaeger exporter for OpenTelemetry traces

[dev-dependencies]
# --- Dev-only: for advanced testing patterns ---
pretty_assertions = "1"                                           # Pretty diff output when assertions fail in tests
test-case = "3"                                                   # Parameterized test cases (multiple inputs per test)
fake = "2"                                                        # Generate fake test data (names, emails, etc.)
mockall = "0.12"                                                  # Create mocks for testing trait-based services

